apply plugin: "java"

repositories {
	maven {url 'https://repository.jboss.org/nexus/content/groups/public'}
	maven {url 'http://repository.springsource.com/maven/bundles/release'}
	maven {url 'http://repository.springsource.com/maven/bundles/external'}
	maven {url 'http://repo.spring.io/milestone'}
	mavenCentral()
	jcenter()
}

dependencies {
	/* spring-boot managed compile dependencies */
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.boot:spring-boot-starter-data-redis")
	compile("org.springframework.boot:spring-boot-starter-validation")
	compile("org.springframework.boot:spring-boot-starter-cache")
	compile("org.springframework.boot:spring-boot-starter-aop")
	compile("org.springframework.boot:spring-boot-starter-security")
	compile("org.springframework.boot:spring-boot-starter-mail")
	compile("org.springframework.boot:spring-boot-devtools")
	compile("commons-collections:commons-collections")
	compile("commons-beanutils:commons-beanutils")
	compile("javax.servlet:javax.servlet-api")
	compile("com.querydsl:querydsl-core")
	compile("com.querydsl:querydsl-jpa")
	compile("com.querydsl:querydsl-apt")
	compile("net.sf.ehcache:ehcache")
	
	compile("com.h2database:h2")
	
	/* mannually managed compile dependencies */
	compile("commons-io:commons-io:2.4")
	compile("commons-lang:commons-lang:2.6")
	compile("commons-validator:commons-validator:1.6")
	compile("commons-fileupload:commons-fileupload:1.3.2")
	compile("org.apache.poi:poi:3.16")
	compile("org.apache.poi:poi-ooxml:3.16")
	compile("jakarta-regexp:jakarta-regexp:1.4")
	compile("oro:oro:2.0.8")
	compile("net.sf.ehcache:ehcache-jgroupsreplication:1.7")
	compile("org.owasp:antisamy:1.4")
	compile("net.minidev:json-smart:2.3")
	
	/* spring-boot managed testCompile dependencies */
	testCompile("org.springframework.boot:spring-boot-starter-test")
	
	/* manually managed testCompile dependencies */ 
	testCompile("org.powermock:powermock-module-junit4:1.5.3")
	testCompile("org.powermock:powermock-api-mockito:1.5.3")
	testCompile("org.dbunit:dbunit:2.4.9")
	
	/* spring-boot managed runtime dependencies */ 
	runtime("javax.servlet:jstl")
	
	/* manually managed runtime dependencies */
	// runtime files("${project.rootDir}/../../../tool/driver/sqljdbc4-1.5.jar")
}

/* does GRADLE_USER_HOME/.gradle/gradle.properties define mssqlDriverDir */
if (project.hasProperty('mssqlDriverDirx')) {
	dependencies {
		/* manually managed runtime dependencies */
		runtime files("${mssqlDriverDir}/sqljdbc4-1.5.jar")
	}
}
/*
else {
	dependencies {
		// spring-boot managed runtime dependencies 
		runtime("org.hsqldb:hsqldb")
		runtime("com.h2database:h2:1.4.196")
	}
}
*/
